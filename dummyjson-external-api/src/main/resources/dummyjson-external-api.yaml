#-------------------------------
# openapi yaml structure:
# -openapi       Version of openapi spec
# -info          Api name, description and version
# -servers       Basepath of all requests
# -paths         Urls the service listens to
# -components    Reusable model objects referenced to from the paths
# -security      Security headers needed
#-------------------------------
openapi: "3.0.2"
info:
  x-api-id: 76h534ks-fg67-pp18-a999-jwd63lcui865
  x-api-type: external
  title: API for dummyjson service
  version: "1.0.0"
  description: API Definition for communication with the dummyjson service
  contact:
    name: Developer
    email: developer@company.com
servers:
  - url: https://dummyjson.com

paths:
  #-------------------------------
  # paths: Quotes
  #-------------------------------
  /quotes:
    get:
      tags:
        - getQuotes
      summary: get quotes from dummyjson server
      operationId: getQuotes
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/skip'
      description: >
        ####
        Get quotes from the dummyjson service.<br>
        *source*: **https://dummyjson.com**<br>
        *search*: **quotes**<br>
        <br>
        By doing a get on this URL all quotes will be returned. By providing the limit and
        skip query parameters it is possible to limit the number of results and browse through them with
        multiple queries.<br>        
        <br>
        this will trigger a search with url:<br>
        https://dummyjson.com/quotes<br>
        <br>
        **Documentation**:<br>
        Dummyjson [documentation](https://dummyjson.com/docs)<br>
        <br>
      responses:
        '200':
          description: Successful returned quotes.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetQuotesResult'

#-------------------------------
# components: Reusable components used in $ref
# - parameters        -> Generic path parameters
# - responses         -> Reusable responses
# - schemas           -> Reusable Model objects
#-------------------------------
components:
  #-------------------------------
  # components.parameters: Generic path parameters
  #-------------------------------
  parameters:
    limit:
      in: query
      name: limit
      required: false
      schema:
        type: integer
        format: int32
        minimum: 0
        maximum: 1000
        default: 10
        example: 10
      description: The maximum number of results in the result set.
    skip:
      in: query
      name: skip
      required: false
      schema:
        type: integer
        format: int32
        minimum: 0
        default: 0
        example: 0
      description: The number of items to skip before starting to collect the result set.


  #-------------------------------
  # components.responses: Reusable responses
  #-------------------------------
  #responses:


  #-------------------------------
  # components.schemas: Reusable schemas (data models)
  #-------------------------------
  schemas:

    # components.schemas: Quote models
    Quote:           # Can be referenced as '#/components/schemas/Quote'
      type: object
      properties:
        id:
          type: integer
          format: int64
          minimum: 1
          example: 123
        quote:
          type: string
          minLength: 1
          description: text of the quote
          example: "This is a great place to work"
        author:
          type: string
          minLength: 1
          description: author of the quote
          example: "Mark"


    GetQuotesResult: # Can be referenced as '#/components/schemas/GetQuotesResult'
      type: object
      properties:
        quotes:
          type: array
          items:
            $ref: '#/components/schemas/Quote'
        total:
          type: integer
          format: int64
          minimum: 0
          example: 1
        skip:
          type: integer
          format: int64
          minimum: 0
          example: 0
        limit:
          type: integer
          format: int64
          minimum: 0
          example: 0